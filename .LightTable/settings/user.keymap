;; User keymap
;; -----------------------------
;; Keymaps are stored as a set of diffs that are merged together together
;; to create the final set of keys. You can modify these diffs to either add
;; or subtract bindings.
;;
;; Like behaviors, keys are bound by tag. When objects with those tags are active
;; the key bindings are live. Keys can be bound to any number of Light Table commands,
;; allowing you the flexibility to execute multiple operations together. To see a list
;; of all the commands you can execute, start typing a word related to the thing you
;; want to do in between the square brackets (e.g. type "editor").

{:+ {:app {"pmeta-shift-w" [:workspace.show]
           "pmeta-shift-c" [:show-connect]
           "pmeta-shift-j" [:toggle-console]
           "pmeta-shift-d" [:docs.search.show]}

     :editor {"pmeta-shift-l" [:goto-line]
              "alt-w" [:editor.watch.watch-selection]
              "alt-shift-w" [:editor.watch.unwatch]
              "ctrl-shift-f" [:smart-indent-selection]
              "ctrl-shift-c" [:toggle-comment-selection]
              "alt-shift-h" [:paredit.shrink.left]
              "alt-shift-l" [:paredit.shrink.right]
              "alt-l" [:paredit.grow.right]
              "alt-h" [:paredit.grow.left]
              "alt-j" [:paredit.select.parent]
              "alt-k" [:paredit.select.clear]
              "pmeta-t" [:tabset.new :tabs.move-next-tabset]
              "pmeta-[" [:tabset.prev]
              "pmeta-]" [:tabset.next]
              "pmeta-shift-]" [:tabs.move-next-tabset]
              "pmeta-shift-[" [:tabs.move-prev-tabset]
              }

     :filter-list.input {"ctrl-p" [(:filter-list.input.move-selection -1)]
                         "ctrl-n" [(:filter-list.input.move-selection 1)]
                         "ctrl-[" [(:filter-list.input.escape! :force)]
                         "ctrl-c" [(:filter-list.input.escape! :force)]
                         }

     :popup {"ctrl-n" [(:popup.move-active 1)]
             "ctrl-p" [(:popup.move-active -1)]
             "ctrl-[" [(:popup.escape)]
             "ctrl-c" [(:popup.escape)]
             }

     }
 :- {:app ["ctrl-shift-d"]
     :editor ["ctrl-d" "pmeta-l"]}}
